extends ../layout

block content
  .reportbutton.col-md-12.md-center
    br
    a.btn.btn-info.btn-lg.center.col-md-3.md-center(href='/reporttool/info/') Search for current reports
  jumbotron
  p.lead
  h1= title
  p.lead
  

  .jumbotron.text-center
    h4= info
  .comingsoon
    h2= tbc
  .comingsoon

  .reportform.col-md-12.md-center
    form.form-horizontal(action='', method="post", role="form")
      - if (error == "val")
        .alert.alert-dismissible.alert-danger
          button.close(type='button', data-dismiss='alert') Ã—
          strong Oh snap!
          a.alert-link(href='#') Please make sure all values are completed 
          |  and try submitting again.
      .form-group
        h4 Drop a pin somewhere in the area of where the disaster occured
        style.
          /* Set the size of the div element that contains the map */
          #map {
          height: 400px;  /* The height is 400 pixels */
          width: 100%;  /* The width is the width of the web page */
          }
        #map
      script.
        function initMap() {

        var map = new google.maps.Map(document.getElementById('map'));

        var defaultLatLng = new google.maps.LatLng(0.000000, 0.000000);

          var mapOptions = {
              zoom: 4,
              center: defaultLatLng,
              mapTypeId: google.maps.MapTypeId.ROADMAP
          };
          var map = new google.maps.Map(document.getElementById('map'),
          mapOptions);

          var geocoder = new google.maps.Geocoder;
          var infowindow = new google.maps.InfoWindow;

          if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(function (position) {
              initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            map.setCenter(initialLocation);
              });
              }
            var marker;
            function placeMarker(location) {
            if ( marker ) {
            marker.setPosition(location);
            } else {
            marker = new google.maps.Marker({
            position: location,
            map: map,
            title: 'location of where you are now'
            });
            }
            }
          

            google.maps.event.addListener(map, 'click', function(event) {
            placeMarker(event.latLng);

            var l = event.latLng;
            var country;
            var geocoder = new google.maps.Geocoder;
            var infowindow = new google.maps.InfoWindow;
            
            geocoder.geocode({latLng: l}, function(results, status) {
            if (status === 'OK') { 
                infowindow.setContent(results[0].formatted_address);
                infowindow.open(map, marker);

                // parse through results
                var  postal_code, locality, sublocality;
                  for (i = 0; i < results[0].address_components.length; ++i) {
                      var component = results[0].address_components[i];
                      if (!sublocality && component.types.indexOf("sublocality") > -1)
                          sublocality = component.long_name;
                      else if (!locality && component.types.indexOf("locality") > -1)
                          locality = component.long_name;
                      else if (!postal_code && component.types.indexOf("postal_code") > -1)
                          postal_code = component.long_name;
                      else if (!country && component.types.indexOf("country") > -1)
                          country = component.long_name;
                  }
                document.getElementById("country").value = country;
                document.getElementById("address").value = (results[0].formatted_address);
              }; 
              console.log(status);
            // countrynew = results[0].address_components[1].long_name
            });

          document.getElementById("lat").value = marker.getPosition().lat();
          document.getElementById("lng").value = marker.getPosition().lng();
          });
        };
        // Need a way of importing key securely and to whitelist IP's on deployment
      script(async='', defer='', src='https://maps.googleapis.com/maps/api/js?key=AIzaSyAPvir7Z2lcufXof9HTRehQ9SzmSMZ1qz0&callback=initMap')
      .form-group.text-white(for='lat')
        input#lat.form-control(name='lat', type="hidden", readonly='yes')
      .form-group.text-white(for='lng')
        input#lng.form-control(name='lng', type="hidden", readonly='yes')
      .form-group
      .form-group-text-white(for='country')
        input#country.form-control(name='country', type='hidden',readonly='yes')
      .form-group
      .form-group-text-white(for='address')
        input#address.form-control(name='address', type='hidden',readonly='yes')
      .form-group
        label.control-label(for="dateStart") Date the disaster started 
        .col-md-12.md-center
          input#name.form-control(name="dateStart", type ="date")
          small#nameHelp.form-text.text-muted Please try to describe the topic as best you can
      .form-group
        label.control-label(for="disasterType") Disaster Type
        .col-md-12.md-center
          select#disasterType.form-control.input-sm(name="disasterType")
            option N/A
            option Landslide
            option Volcanic Eruption
            option Lightning
            option Forest Fire
            option Storm
            option Drought
            option Flood
            option Earthquake
            option Other
      .form-group
        label.control-label(for="reporterNeeds") What do you need today?
        .col-md-12.md-center
          select#reporterNeeds.form-control.input-sm(name="reporterNeeds")
            option Nothing 
            option Transport
            option Food 
            option Medicine
            option A friendly face
            option Clothing
            option Other
      .form-group
        label.control-label(for="instantDanger") Do you think you are in danger now?
        .col-md-12.md-center
          select#instantDanger.form-control.input-sm(name="instantDanger")
            option Dont know
            option Yes
            option No
      .form-group
        label.control-label(for="noPeopleAffected") How many people have been affected with you?
        .col-md-12.md-center
          textarea#hubtext.form-control(name="noPeopleAffected", rows='1', type="text", onkeypress="return event.charCode >= 48 && event.charCode <= 57")
          small#hubtextHelp.form-text.text-muted You can only enter numbers into this field
      .form-group 
          label.control-label(for="author") Author's Name
          .col-md-12.md-center
            input#name.form-control(name="author")
            small#nameHelp.form-text.text-muted ...
      .form-group 
          label.control-label(for="contactDetails") Contact Details
          .col-md-12.md-center
            input#name.form-control(name="contactDetails")
            small#nameHelp.form-text.text-muted These will only be shared in the event an individual wants to help you
      .col-md-12.md-center
      button.btn.btn-primary.btn-lg.col-md-12.md-center Submit
      br
      br





